"""
import sys
from resource import *
import time
import psutil
"""
alpha = [[0,110,48,94],[110,0,118,48],[48,118,0,110],[94,48,110,0]]
delta = 30
look_up = {'A':0, 'C':1, 'G':2, 'T':3}
"""
def process_memory():
    process = psutil.Process()
    memory_info = process.memory_info()
    memory_consumed = int(memory_info.rss/1024)
    return memory_consumed

def time_wrapper():
    start_time = time.time()
    call_algorithm()
    end_time = time.time()
    time_taken = (end_time - start_time)*1000
    return time_taken
"""
"""
def dp(s1,s2):
    m = len(s1)
    n = len(s2)
    table = [[0]*(n+1) for _ in range(m+1)]
    for i in range(m+1):
        table[i][0] = i*delta
    for j in range(n+1):
        table[0][j] = j*delta
    for i in range(1,m+1):
        for j in range(1,n+1):
            table[i][j] = min(table[i-1][j-1]+alpha[look_up[s1[i-1]]][look_up[s2[j-1]]], table[i-1][j]+delta, table[i][j-1]+delta)
    return table[m]
"""
def optimized_dp(s1,s2):
    m = len(s1)
    n = len(s2)
    table = [[0]*(n+1) for _ in range(2)]
    for j in range(n+1):
        table[0][j] = j*delta
    for i in range(1,m+1):
        table[i%2][0] = i*30
        for j in range(1,n+1):
            table[i%2][j] = min(table[(i-1)%2][j-1]+alpha[look_up[s1[i-1]]][look_up[s2[j-1]]], table[(i-1)%2][j]+delta, table[i%2][j-1]+delta)
    return table[m%2]

def efficient(s1,s2,cost):   
    m = len(s1)
    n = len(s2) 
    if n == 0:
        return s1, '_'*m, cost+30*m
    elif m == 0:
        return '_'*n, s2, cost+30*n
    elif m == 1:
        if n == 1:
            return s1, s2, cost+alpha[look_up[s1]][look_up[s2]]
        else:
            pivot = s2.find(s1)
            if pivot == -1:
                if s1 == 'G':
                    pivot1 = s2.find('A')
                    return '_'*(pivot1) + s1 + '_'*(n-pivot1-1), s2, cost+30*(n-1)+alpha[look_up['G']][look_up['A']]
                elif s1 == 'A':
                    pivot1 = s2.find('G')
                    return '_'*(pivot1) + s1 + '_'*(n-pivot1-1), s2, cost+30*(n-1)+alpha[look_up['A']][look_up['G']]
                elif s1 == 'C':
                    pivot1 = s2.find('T')
                    return '_'*(pivot1) + s1 + '_'*(n-pivot1-1), s2, cost+30*(n-1)+alpha[look_up['C']][look_up['T']]
                elif s1 == 'T':
                    pivot1 = s2.find('C')
                    return '_'*(pivot1) + s1 + '_'*(n-pivot1-1), s2, cost+30*(n-1)+alpha[look_up['T']][look_up['C']]
                else:
                    return s1 + '_'*n, '_'*m + s2, cost+30*(m+n)
            else:
                return '_'*(pivot) + s1 + '_'*(n-pivot-1), s2, cost+30*(n-1)
    else:
        mid = m//2
        result1 = optimized_dp(s1[:mid],s2) 
        result2 = optimized_dp(s1[mid:][::-1],s2[::-1])[::-1]
        min_val, pivot = float("inf"), 0
        for i in range(len(result1)):
            cur = result1[i] + result2[i]
            if cur < min_val:
                min_val = cur
                pivot = i
        s1_left, s1_right, cost1 = efficient(s1[:mid],s2[:pivot],cost)
        s2_left, s2_right, cost2 = efficient(s1[mid:],s2[pivot:],cost)
        return s1_left + s2_left, s1_right + s2_right, cost1+cost2

#input 1
s1 = 'ACACACTGACTACTGACTGGTGACTACTGACTGGACTGACTACTGACTGGTGACTACTGACTGG'
s2 = 'TATTATTATACGCTATTATACGCGACGCGGACGCGTATACGCTATTATACGCGACGCGGACGCG'

# #input 2
#s1 = 'ACACACTGACTACTGACTGGTGACTACTGACTGGACTGACTACTGACTGGTGACTACTGACTGG'
#s2 = 'TTATTATACGCGACGCGATTATACGCGACGCG'

# #input 3
#s1 = 'AAAAAAGTCGTCAGTCGTCAAGTCGTCAGTCGTCAAAGTCGTCAGTCGTCAAGTCGTCAGTCGTCAAAAGTCGTCAGTCGTCAAGTCGTCAGTCGTCAAAGTCGTCAGTCGTCAAGTCGTCAGTCGTC'
#s2 = 'TATATATATATACGCGTACGCGTATACGCGTACGCGTATATACGCGTACGCGTATACGCGTACGCGTATATATACGCGTACGCGTATACGCGTACGCGTATATACGCGTACGCGTATACGCGTACGCG'

# #input 4
#s1 = 'TCGATCGATCGATCGATCGATCGATCGATCGATCGATCGATCGATCGATCGATCGATCGATCGTCGATCGATCGATCGATCGATCGATCGATCGATCGATCGATCGATCGATCGATCGATCGATCGAA'
#s2 = 'TCGATCGATCGATCGATCGATCGATCGATCGATCGATCGATCGATCGATCGATCGATCGATCGATCGATCGATCGATCGATCGATCGATCGATCGATCGATCGATCGATCGATCGATCGATCGATCGA'

# # #input 5
#s1 = 'ACACACAAAAACACACAAAACACACACAAAAACACACAAAACACACAAACACACAACACACACACACGTACGACGTACGTTGTACGACGTACGTTACGTACGACGTACGTTGTACGACGTACGTTGTACGACGTACGTTGTACGACGTACGTTACGTACGACGTACGTTGTACGACGTACGTTCACACGTACGACGTACGTTGTACGACGTACGTTACGTACGACGTACGTTGTACGACGTACGTTGTACGACGTACGTTGTACGACGTACGTTACGTACGACGTACGTTGTACGACGTACGTTCACACACACACGTACGACGTACGTTGTACGACGTACGTTACGTACGACGTACGTTGTACGACGTACGTTGTACGACGTACGTTGTACGACGTACGTTACGTACGACGTACGTTGTACGACGTACGTTCACACGTACGACGTACGTTGTACGACGTACGTTACGTACGACGTACGTTGTACGACGTACGTTGTACGACGTACGTTGTACGACGTACGTTACGTACGACGTACGTTGTACGACGTACGTTCACACAACACACACACACGTACGACGTACGTTGTACGACGTACGTTACGTACGACGTACGTTGTACGACGTACGTTGTACGACGTACGTTGTACGACGTACGTTACGTACGACGTACGTTGTACGACGTACGTTCACACGTACGACGTACGTTGTACGACGTACGTTACGTACGACGTACGTTGTACGACGTACGTTGTACGACGTACGTTGTACGACGTACGTTACGTACGACGTACGTTGTACGACGTACGTTCACACACACACGTACGACGTACGTTGTACGACGTACGTTACGTACGACGTACGTTGTACGACGTACGTTGTACGACGTACGTTGTACGACGTACGTTACGTACGACGTACGTTGTACGACGTACGTTCACACGTACGACGTACGTTGTACGACGTACGTTACGTACGACGTACGTTGTACGACGTACGTTGTACGACGTACGTTGTACGACGTACGTTACGTACGACGTACGTTGTACGACGTACGTTCACACAAACACACAACACACACACACGTACGACGTACGTTGTACGACGTACGTTACGTACGACGTACGTTGTACGACGTACGTTGTACGACGTACGTTGTACGACGTACGTTACGTACGACGTACGTTGTACGACGTACGTTCACACGTACGACGTACGTTGTACGACGTACGTTACGTACGACGTACGTTGTACGACGTACGTTGTACGACGTACGTTGTACGACGTACGTTACGTACGACGTACGTTGTACGACGTACGTTCACACACACACGTACGACGTACGTTGTACGACGTACGTTACGTACGACGTACGTTGTACGACGTACGTTGTACGACGTACGTTGTACGACGTACGTTACGTACGACGTACGTTGTACGACGTACGTTCACACGTACGACGTACGTTGTACGACGTACGTTACGTACGACGTACGTTGTACGACGTACGTTGTACGACGTACGTTGTACGACGTACGTTACGTACGACGTACGTTGTACGACGTACGTTCACACAACACACACACACGTACGACGTACGTTGTACGACGTACGTTACGTACGACGTACGTTGTACGACGTACGTTGTACGACGTACGTTGTACGACGTACGTTACGTACGACGTACGTTGTACGACGTACGTTCACACGTACGACGTACGTTGTACGACGTACGTTACGTACGACGTACGTTGTACGACGTACGTTGTACGACGTACGTTGTACGACGTACGTTACGTACGACGTACGTTGTACGACGTACGTTCACACACACACGTACGACGTACGTTGTACGACGTACGTTACGTACGACGTACGTTGTACGACGTACGTTGTACGACGTACGTTGTACGACGTACGTTACGTACGACGTACGTTGTACGACGTACGTTCACACGTACGACGTACGTTGTACGACGTACGTTACGTACGACGTACGTTGTACGACGTACGTTGTACGACGTACGTTGTACGACGTACGTTACGTACGACGTACGTTGTACGACGTACGTTACACAAACACACAACACACACACACGTACGACGTACGTTGTACGACGTACGTTACGTACGACGTACGTTGTACGACGTACGTTGTACGACGTACGTTGTACGACGTACGTTACGTACGACGTACGTTGTACGACGTACGTTCACACGTACGACGTACGTTGTACGACGTACGTTACGTACGACGTACGTTGTACGACGTACGTTGTACGACGTACGTTGTACGACGTACGTTACGTACGACGTACGTTGTACGACGTACGTTCACACACACACGTACGACGTACGTTGTACGACGTACGTTACGTACGACGTACGTTGTACGACGTACGTTGTACGACGTACGTTGTACGACGTACGTTACGTACGACGTACGTTGTACGACGTACGTTCACACGTACGACGTACGTTGTACGACGTACGTTACGTACGACGTACGTTGTACGACGTACGTTGTACGACGTACGTTGTACGACGTACGTTACGTACGACGTACGTTGTACGACGTACGTTCACACAACACACACACACGTACGACGTACGTTGTACGACGTACGTTACGTACGACGTACGTTGTACGACGTACGTTGTACGACGTACGTTGTACGACGTACGTTACGTACGACGTACGTTGTACGACGTACGTTCACACGTACGACGTACGTTGTACGACGTACGTTACGTACGACGTACGTTGTACGACGTACGTTGTACGACGTACGTTGTACGACGTACGTTACGTACGACGTACGTTGTACGACGTACGTTCACACACACACGTACGACGTACGTTGTACGACGTACGTTACGTACGACGTACGTTGTACGACGTACGTTGTACGACGTACGTTGTACGACGTACGTTACGTACGACGTACGTTGTACGACGTACGTTCACACGTACGACGTACGTTGTACGACGTACGTTACGTACGACGTACGTTGTACGACGTACGTTGTACGACGTACGTTGTACGACGTACGTTACGTACGACGTACGTTGTACGACGTACGTTCACACAAACACACAACACACACACACGTACGACGTACGTTGTACGACGTACGTTACGTACGACGTACGTTGTACGACGTACGTTGTACGACGTACGTTGTACGACGTACGTTACGTACGACGTACGTTGTACGACGTACGTTCACACGTACGACGTACGTTGTACGACGTACGTTACGTACGACGTACGTTGTACGACGTACGTTGTACGACGTACGTTGTACGACGTACGTTACGTACGACGTACGTTGTACGACGTACGTTCACACACACACGTACGACGTACGTTGTACGACGTACGTTACGTACGACGTACGTTGTACGACGTACGTTGTACGACGTACGTTGTACGACGTACGTTACGTACGACGTACGTTGTACGACGTACGTTCACACGTACGACGTACGTTGTACGACGTACGTTACGTACGACGTACGTTGTACGACGTACGTTGTACGACGTACGTTGTACGACGTACGTTACGTACGACGTACGTTGTACGACGTACGTTCACACAACACACACACACGTACGACGTACGTTGTACGACGTACGTTACGTACGACGTACGTTGTACGACGTACGTTGTACGACGTACGTTGTACGACGTACGTTACGTACGACGTACGTTGTACGACGTACGTTCACACGTACGACGTACGTTGTACGACGTACGTTACGTACGACGTACGTTGTACGACGTACGTTGTACGACGTACGTTGTACGACGTACGTTACGTACGACGTACGTTGTACGACGTACGTTCACACACACACGTACGACGTACGTTGTACGACGTACGTTACGTACGACGTACGTTGTACGACGTACGTTGTACGACGTACGTTGTACGACGTACGTTACGTACGACGTACGTTGTACGACGTACGTTCACACGTACGACGTACGTTGTACGACGTACGTTACGTACGACGTACGTTGTACGACGTACGTTGTACGACGTACGTTGTACGACGTACGTTACGTACGACGTACGTTGTACGACGTACGTT'
#s2 = 'TTTATTTTTTATTTTTATTTTATTTTTTATTTTTATTATTTATTTTATTATACGCGACGCGATTATACGCGACGCGATACGCGACGCGATTATACGCGACGCGTTTATTATACGCGACGCGATTATACGCGACGCGATACGCGACGCGATTATACGCGACGCGTTTATTTTATTATACGCGACGCGATTATACGCGACGCGATACGCGACGCGATTATACGCGACGCGTTTATTATACGCGACGCGATTATACGCGACGCGATACGCGACGCGATTATACGCGACGCGTATTATTTATTTTATTATACGCGACGCGATTATACGCGACGCGATACGCGACGCGATTATACGCGACGCGTTTATTATACGCGACGCGATTATACGCGACGCGATACGCGACGCGATTATACGCGACGCGTTTATTTTATTATACGCGACGCGATTATACGCGACGCGATACGCGACGCGATTATACGCGACGCGTTTATTATACGCGACGCGATTATACGCGACGCGATACGCGACGCGATTATACGCGACGCGATTTATTTTATTATACGCGACGCGATTATACGCGACGCGATACGCGACGCGATTATACGCGACGCGTTTATTATACGCGACGCGATTATACGCGACGCGATACGCGACGCGATTATACGCGACGCGTTTATTTTATTATACGCGACGCGATTATACGCGACGCGATACGCGACGCGATTATACGCGACGCGTTTATTATACGCGACGCGATTATACGCGACGCGATACGCGACGCGATTATACGCGACGCGTATTATTTATTTTATTATACGCGACGCGATTATACGCGACGCGATACGCGACGCGATTATACGCGACGCGTTTATTATACGCGACGCGATTATACGCGACGCGATACGCGACGCGATTATACGCGACGCGTTTATTTTATTATACGCGACGCGATTATACGCGACGCGATACGCGACGCGATTATACGCGACGCGTTTATTATACGCGACGCGATTATACGCGACGCGATACGCGACGCGATTATACGCGACGCGTTATTATTTATTTTATTATACGCGACGCGATTATACGCGACGCGATACGCGACGCGATTATACGCGACGCGTTTATTATACGCGACGCGATTATACGCGACGCGATACGCGACGCGATTATACGCGACGCGTTTATTTTATTATACGCGACGCGATTATACGCGACGCGATACGCGACGCGATTATACGCGACGCGTTTATTATACGCGACGCGATTATACGCGACGCGATACGCGACGCGATTATACGCGACGCGTATTATTTATTTTATTATACGCGACGCGATTATACGCGACGCGATACGCGACGCGATTATACGCGACGCGTTTATTATACGCGACGCGATTATACGCGACGCGATACGCGACGCGATTATACGCGACGCGTTTATTTTATTATACGCGACGCGATTATACGCGACGCGATACGCGACGCGATTATACGCGACGCGTTTATTATACGCGACGCGATTATACGCGACGCGATACGCGACGCGATTATACGCGACGCGATTTATTTTATTATACGCGACGCGATTATACGCGACGCGATACGCGACGCGATTATACGCGACGCGTTTATTATACGCGACGCGATTATACGCGACGCGATACGCGACGCGATTATACGCGACGCGTTTATTTTATTATACGCGACGCGATTATACGCGACGCGATACGCGACGCGATTATACGCGACGCGTTTATTATACGCGACGCGATTATACGCGACGCGATACGCGACGCGATTATACGCGACGCGTATTATTTATTTTATTATACGCGACGCGATTATACGCGACGCGATACGCGACGCGATTATACGCGACGCGTTTATTATACGCGACGCGATTATACGCGACGCGATACGCGACGCGATTATACGCGACGCGTTTATTTTATTATACGCGACGCGATTATACGCGACGCGATACGCGACGCGATTATACGCGACGCGTTTATTATACGCGACGCGATTATACGCGACGCGATACGCGACGCGATTATACGCGACGCGTATTTATTTTATTATACGCGACGCGATTATACGCGACGCGATACGCGACGCGATTATACGCGACGCGTTTATTATACGCGACGCGATTATACGCGACGCGATACGCGACGCGATTATACGCGACGCGTTTATTTTATTATACGCGACGCGATTATACGCGACGCGATACGCGACGCGATTATACGCGACGCGTTTATTATACGCGACGCGATTATACGCGACGCGATACGCGACGCGATTATACGCGACGCGTATTATTTATTTTATTATACGCGACGCGATTATACGCGACGCGATACGCGACGCGATTATACGCGACGCGTTTATTATACGCGACGCGATTATACGCGACGCGATACGCGACGCGATTATACGCGACGCGTTTATTTTATTATACGCGACGCGATTATACGCGACGCGATACGCGACGCGATTATACGCGACGCGTTTATTATACGCGACGCGATTATACGCGACGCGATACGCGACGCGATTATACGCGACGCGATTTATTTTATTATACGCGACGCGATTATACGCGACGCGATACGCGACGCGATTATACGCGACGCGTTTATTATACGCGACGCGATTATACGCGACGCGATACGCGACGCGATTATACGCGACGCGTTTATTTTATTATACGCGACGCGATTATACGCGACGCGATACGCGACGCGATTATACGCGACGCGTTTATTATACGCGACGCGATTATACGCGACGCGATACGCGACGCGATTATACGCGACGCGTATTATTTATTTTATTATACGCGACGCGATTATACGCGACGCGATACGCGACGCGATTATACGCGACGCGTTTATTATACGCGACGCGATTATACGCGACGCGATACGCGACGCGATTATACGCGACGCGTTTATTTTATTATACGCGACGCGATTATACGCGACGCGATACGCGACGCGATTATACGCGACGCGTTTATTATACGCGACGCGATTATACGCGACGCGATACGCGACGCGATTATACGCGACGCGTTATTATTTATTTTATTATACGCGACGCGATTATACGCGACGCGATACGCGACGCGATTATACGCGACGCGTTTATTATACGCGACGCGATTATACGCGACGCGATACGCGACGCGATTATACGCGACGCGTTTATTTTATTATACGCGACGCGATTATACGCGACGCGATACGCGACGCGATTATACGCGACGCGTTTATTATACGCGACGCGATTATACGCGACGCGATACGCGACGCGATTATACGCGACGCGTATTATTTATTTTATTATACGCGACGCGATTATACGCGACGCGATACGCGACGCGATTATACGCGACGCGTTTATTATACGCGACGCGATTATACGCGACGCGATACGCGACGCGATTATACGCGACGCGTTTATTTTATTATACGCGACGCGATTATACGCGACGCGATACGCGACGCGATTATACGCGACGCGTTTATTATACGCGACGCGATTATACGCGACGCGATACGCGACGCGATTATACGCGACGCGATTTATTTTATTATACGCGACGCGATTATACGCGACGCGATACGCGACGCGATTATACGCGACGCGTTTATTATACGCGACGCGATTATACGCGACGCGATACGCGACGCGATTATACGCGACGCGTTTATTTTATTATACGCGACGCGATTATACGCGACGCGATACGCGACGCGATTATACGCGACGCGTTTATTATACGCGACGCGATTATACGCGACGCGATACGCGACGCGATTATACGCGACGCGTATTATTTATTTTATTATACGCGACGCGATTATACGCGACGCGATACGCGACGCGATTATACGCGACGCGTTTATTATACGCGACGCGATTATACGCGACGCGATACGCGACGCGATTATACGCGACGCGTTTATTTTATTATACGCGACGCGATTATACGCGACGCGATACGCGACGCGATTATACGCGACGCGTTTATTATACGCGACGCGATTATACGCGACGCGATACGCGACGCGATTATACGCGACGCG'

print(efficient(s1,s2,0))




